# Rate limiting key (allows OPTIONS request to bypass rate limiting)
map $request_method $ratelimit_key {
    OPTIONS     '';
    default     $binary_remote_addr;
}

limit_req_status 429;

# Rate limit for users posting quibbles (1 per 2 seconds)
limit_req_zone $ratelimit_key zone=quibblePostLimit:10m rate=30r/m;

# Rate limit for users logging-in (1 per 30 seconds)
limit_req_zone $ratelimit_key zone=loginLimit:10m rate=2r/m;

upstream api {
    server api:8080;
}

server {
    listen 80 default_server;
    listen [::]:80;
    server_name localhost;

    # Headers to allow CORS
    add_header Access-Control-Allow-Origin http://localhost:5173 always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;
    add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS, POST, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, contentType, Content-Type, Accept, Authorization, Pragma' always;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location / {
        proxy_pass http://api;
    }

    location ~* ^/quibble/?$ {
        limit_req zone=quibblePostLimit burst=1;
        proxy_pass http://api;
    }

    location ~* ^/auth/login/?$ {
        limit_req zone=loginLimit burst=4 nodelay;
        proxy_pass http://api;
    }
}
